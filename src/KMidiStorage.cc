//======================================================================
//	KMidiStorage.cc
//----------------------------------------------------------------------
//	Copyright Â© 1999 KISAKA Toshihiro.
//	All rights reserved.
//		noah@gopherwood.com
//		kisaka@pochi.iijnet.or.jp
//======================================================================

#include "KMidiStorage.h"

#include <cstring>
#include <String.h>


//======================================================================
#pragma mark === class KMidiStorage ===
//======================================================================

//----------------------------------------------------------------------

//----------------------------------------------------------------------

KMidiStorage::KMidiStorage()
  : mTimeFormat(0)
{
}


//----------------------------------------------------------------------

//----------------------------------------------------------------------

KMidiStorage::~KMidiStorage()
{
}


//----------------------------------------------------------------------

//----------------------------------------------------------------------

void
KMidiStorage::SetFormat(const char* format)
{
	mFormat = format;
}


//----------------------------------------------------------------------

//----------------------------------------------------------------------

void
KMidiStorage::SetNumTracks(uint32 num)
{
	mNumTracks = num;
}


//----------------------------------------------------------------------

//----------------------------------------------------------------------

void
KMidiStorage::SetLoadedTracks(uint32 num)
{
	mLoadedTracks = num;
}


//----------------------------------------------------------------------

//----------------------------------------------------------------------

void
KMidiStorage::SetTimeFormat(int32 timeformat)
{
	mTimeFormat = timeformat;
}


//----------------------------------------------------------------------

//----------------------------------------------------------------------

void
KMidiStorage::DumpEvents()
{
}


//----------------------------------------------------------------------

//----------------------------------------------------------------------

void
KMidiStorage::SeekByTick(uint32 tick)
{
}
